#!/bin/bash

# cd to history
function pc(){
  p_load_file
  len=${#p_keys[@]}
  for((i=0;i<$len;i++));do
    key=${p_keys[$i]}
    value=${p_values[$i]}
    if [ "$1" == "$key" -o "$1" = "$i" ]; then
      cd $value
    fi
  done
}

# add history
function pa(){
  if [ "$1" == "" ];then
    pl
    echo "please input name"
  else
    p_load_file
    ishave="0"
    len=${#p_keys[@]}
    for((i=0;i<$len;i++));do
      key=${p_keys[$i]}
      value=${p_values[$i]}
      if [ "$1" == "$key" ]; then
        ishave="1"
        echo "[p-add] $1 is saved in dir: $i"
      fi
    done

    if [ "$ishave" == "0" ];then
      len=${#p_keys[@]}
      p_keys[$len]=$1
      p_values[$len]=`pwd`
      echo "[$len] [${p_keys[$len]}] ${p_values[$len]}"
      p_save_file
    fi
  fi
}

# clear history
function p-clear(){
  p_values=()
  p_keys=()
  p_save_file
  echo "[p-init] did empty"
}

# delete one history
function pd(){
  newKeys=()
  newValues=()
  nowNum=-1
  len=${#p_keys[@]}
  for((i=0;i<$len;i++));do
    key=${p_keys[$i]}
    value=${p_values[$i]}
    if [ "$1" == "$key" -o "$1" == "$i" ]; then
      echo "delete: [$i] [$key] $value"
    else
      let nowNum+=1
      newValues[$nowNum]=$value
      newKeys[$nowNum]=$key
    fi
  done
  # clear old data
  p_values=()
  p_keys=()
  # add deleted data
  len=${#newKeys[@]}
  for((i=0;i<$len;i++));do
    p_values[$i]=${newValues[$i]}
    p_keys[$i]=${newKeys[$i]}
  done
  p_save_file
}

# ls history
function pl(){
  p_load_file
  len=${#p_keys[@]}
  if [ $len == 0 ];then
    echo "[p-ls] is empty"
  fi
  for((i=0;i<$len;i++));do
    key=${p_keys[$i]}
    value=${p_values[$i]}
    echo [$i] [$key] $value
  done
}

function p_load_file(){
  p_values=()
  p_keys=()
  valueNum=-1
  keyNum=-1
  single=0
  if [ -f $p_data_file ];then
    while read line
    do
      if [ $single == 0 ];then
        let single=1
        let keyNum+=1
        p_keys[$keyNum]="$line"
      else
        let single=0
        let valueNum+=1
        p_values[$valueNum]="$line"
      fi
    done < $p_data_file
  fi
}

function p_save_file(){
  valueText=""
  keyText=""
  if [ -f $p_data_file ];then
    rm -rf $p_data_file
  fi
  len=${#p_keys[@]}
  for((i=0;i<$len;i++));do
    key=${p_keys[$i]}
    value=${p_values[$i]}
    echo "$key" >> $p_data_file
    echo "$value" >> $p_data_file
  done
}

p_data_file=~/.p_data_file
p_values=()
p_keys=()
# 初始化需要读取本地文件
p_load_file
